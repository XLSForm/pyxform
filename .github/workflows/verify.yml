name: Verify

on: [push, pull_request]

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: ['3.12']
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      # Install dependencies.
      - uses: actions/cache@v4
        name: Python cache with dependencies.
        id: python-cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ matrix.os }}-${{ matrix.python }}-${{ hashFiles('pyproject.toml') }}
      - name: Install dependencies.
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          pip list

      # Linter.
      - run: ruff check pyxform tests --no-fix
      - run: ruff format pyxform tests --diff

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      # Run all matrix jobs even if one of them fails.
      fail-fast: false
      matrix:
        python: ['3.10', '3.11', '3.12', '3.13']
        os: [ubuntu-latest, macos-latest, windows-latest]
        PYXFORM_TESTS_RUN_ODK_VALIDATE: ['false']
        # Extra job to check PyxformTestCase tests pass with ODK Validate.
        # Keep versions sync with default dev version (same as 'lint' job above).
        include:
          - python: '3.12'
            os: ubuntu-latest
            PYXFORM_TESTS_RUN_ODK_VALIDATE: 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      # Install dependencies.
      - uses: actions/cache@v4
        name: Python cache with dependencies.
        id: python-cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ matrix.os }}-${{ matrix.python }}-${{ hashFiles('pyproject.toml') }}
      - name: Install dependencies.
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          pip list

      # Tests.
      - name: Run tests
        run: python -m unittest --verbose
        env:
          PYXFORM_TESTS_RUN_ODK_VALIDATE: ${{ matrix.PYXFORM_TESTS_RUN_ODK_VALIDATE }}

      # Build and Upload.
      - name: Build sdist and wheel.
        if: success() && matrix.PYXFORM_TESTS_RUN_ODK_VALIDATE == 'false'
        run: |
          pip install flit==3.9.0
          flit --debug build --no-use-vcs
      - name: Upload sdist and wheel.
        if: success() && matrix.PYXFORM_TESTS_RUN_ODK_VALIDATE == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: pyxform--on-${{ matrix.os }}--py${{ matrix.python }}
          path: ${{ github.workspace }}/dist/pyxform*
